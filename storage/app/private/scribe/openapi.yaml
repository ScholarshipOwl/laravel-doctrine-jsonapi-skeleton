openapi: 3.0.3
info:
  title: 'Laravel Doctrine JSON:API Skeleton API Documentation'
  description: ''
  version: 1.0.0
servers:
  -
    url: '{{ config("app.url") }}'
tags:
  -
    name: ''
    description: ''
  -
    name: Auth
    description: ''
  -
    name: Roles
    description: ''
  -
    name: Users
    description: ''
components:
  schemas:
    users:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - id
            - type
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: users
              enum:
                - users
            attributes:
              type: object
              properties:
                name:
                  type: string
                  example: 'Eulalia VonRueden'
                email:
                  type: string
                  example: feeney.demarcus@example.com
            relationships:
              type: object
              properties:
                roles:
                  type: object
                  properties:
                    data:
                      type: object
                      required:
                        - id
                        - type
                      properties:
                        id:
                          type: string
                          example: '1'
                        type:
                          type: string
                          example: roles
                          enum:
                            - roles
    roles:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - id
            - type
          properties:
            id:
              type: string
              example: '1'
            type:
              type: string
              example: roles
              enum:
                - roles
            attributes:
              type: object
              properties:
                name:
                  type: string
                  example: quis
                permissions:
                  type: array
                  example: []
paths:
  /forgot-password:
    post:
      summary: 'Send a reset link to the given user.'
      operationId: sendAResetLinkToTheGivenUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - ''
      security: []
  /user/profile-information:
    put:
      summary: "Update the user's profile information."
      operationId: updateTheUsersProfileInformation
      description: ''
      parameters: []
      responses: {  }
      tags:
        - ''
      security: []
  /user/password:
    put:
      summary: "Update the user's password."
      operationId: updateTheUsersPassword
      description: ''
      parameters: []
      responses: {  }
      tags:
        - ''
      security: []
  /user/confirmed-password-status:
    get:
      summary: 'Get the password confirmation status.'
      operationId: getThePasswordConfirmationStatus
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - ''
      security: []
  /auth/login:
    post:
      summary: Login
      operationId: login
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                properties:
                  id:
                    type: integer
                    example: 1
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                nullable: true
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: gbailey@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: '+-0pBNvYgxwmi/#iw'
                  nullable: false
              required:
                - email
                - password
      security: []
  /auth/request-reset-password:
    post:
      summary: 'Request password reset'
      operationId: requestPasswordReset
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 'Password reset link sent'
                properties:
                  status:
                    type: string
                    example: 'Password reset link sent'
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 'Failed to send password reset link'
                properties:
                  status:
                    type: string
                    example: 'Failed to send password reset link'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: gbailey@example.net
                  nullable: false
              required:
                - email
      security: []
  /auth/reset-password:
    post:
      summary: 'Reset password'
      operationId: resetPassword
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 'Password reset'
                properties:
                  status:
                    type: string
                    example: 'Password reset'
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 'Failed to reset password'
                properties:
                  status:
                    type: string
                    example: 'Failed to reset password'
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: gbailey@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: '+-0pBNvYgxwmi/#iw'
                  nullable: false
                token:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
              required:
                - email
                - password
                - token
      security: []
  /auth/logout:
    post:
      summary: Logout
      operationId: logout
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 'Logged out successfully'
                properties:
                  status:
                    type: string
                    example: 'Logged out successfully'
      tags:
        - Auth
      security: []
  /api/roles:
    get:
      summary: 'List Roles'
      operationId: listRoles
      description: 'Retrieve a list of Roles.'
      parameters:
        -
          in: query
          name: 'fields[roles]'
          description: "Sparse fieldsets - specify which fields to include in the response for each resource type. ([Spec](https://jsonapi.org/format/#fetching-sparse-fieldsets))\n\n**Available fields:** `name`, `permissions`"
          example: null
          required: false
          schema:
            type: string
            description: "Sparse fieldsets - specify which fields to include in the response for each resource type. ([Spec](https://jsonapi.org/format/#fetching-sparse-fieldsets))\n\n**Available fields:** `name`, `permissions`"
            example: null
            nullable: false
        -
          in: query
          name: 'page[number]'
          description: 'Page number. ([Spec](https://jsonapi.org/format/#fetching-pagination))'
          example: 1
          required: false
          schema:
            type: number
            description: 'Page number. ([Spec](https://jsonapi.org/format/#fetching-pagination))'
            example: 1
            nullable: false
        -
          in: query
          name: 'page[size]'
          description: 'Number of results per page. ([Spec](https://jsonapi.org/format/#fetching-pagination))'
          example: 10
          required: false
          schema:
            type: number
            description: 'Number of results per page. ([Spec](https://jsonapi.org/format/#fetching-pagination))'
            example: 10
            nullable: false
        -
          in: query
          name: sort
          description: "Sort the results by attributes. Prefix with `-` for descending order. ([Spec](https://jsonapi.org/format/#fetching-sorting))\n\n**Available sort fields:** `name`, `permissions`"
          example: null
          required: false
          schema:
            type: string
            description: "Sort the results by attributes. Prefix with `-` for descending order. ([Spec](https://jsonapi.org/format/#fetching-sorting))\n\n**Available sort fields:** `name`, `permissions`"
            example: null
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      type: roles
                      id: '881'
                      attributes:
                        name: est
                        permissions: []
                      links:
                        self: /roles/881
                    -
                      type: roles
                      id: '882'
                      attributes:
                        name: dignissimos
                        permissions: []
                      links:
                        self: /roles/882
                    -
                      type: roles
                      id: '883'
                      attributes:
                        name: neque
                        permissions: []
                      links:
                        self: /roles/883
                  meta:
                    pagination:
                      total: 100
                      count: 20
                      per_page: 3
                      current_page: 1
                      total_pages: 5
                  links:
                    self: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                    first: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                    next: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                    last: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                properties:
                  data:
                    type: array
                    example:
                      -
                        type: roles
                        id: '881'
                        attributes:
                          name: est
                          permissions: []
                        links:
                          self: /roles/881
                      -
                        type: roles
                        id: '882'
                        attributes:
                          name: dignissimos
                          permissions: []
                        links:
                          self: /roles/882
                      -
                        type: roles
                        id: '883'
                        attributes:
                          name: neque
                          permissions: []
                        links:
                          self: /roles/883
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: roles
                        id:
                          type: string
                          example: '881'
                        attributes:
                          type: object
                          properties:
                            name:
                              type: string
                              example: est
                            permissions:
                              type: array
                              example: []
                        links:
                          type: object
                          properties:
                            self:
                              type: string
                              example: /roles/881
                  meta:
                    type: object
                    properties:
                      pagination:
                        type: object
                        properties:
                          total:
                            type: integer
                            example: 100
                          count:
                            type: integer
                            example: 20
                          per_page:
                            type: integer
                            example: 3
                          current_page:
                            type: integer
                            example: 1
                          total_pages:
                            type: integer
                            example: 5
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                      first:
                        type: string
                        example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                      next:
                        type: string
                        example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                      last:
                        type: string
                        example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors: []
                properties:
                  errors:
                    type: array
                    example: []
      tags:
        - Roles
      security: []
    post:
      summary: 'Create Role'
      operationId: createRole
      description: 'Create a new Role.'
      parameters:
        -
          in: query
          name: 'fields[roles]'
          description: "Sparse fieldsets - specify which fields to include in the response for each resource type. ([Spec](https://jsonapi.org/format/#fetching-sparse-fieldsets))\n\n**Available fields:** `name`, `permissions`"
          example: null
          required: false
          schema:
            type: string
            description: "Sparse fieldsets - specify which fields to include in the response for each resource type. ([Spec](https://jsonapi.org/format/#fetching-sparse-fieldsets))\n\n**Available fields:** `name`, `permissions`"
            example: null
            nullable: false
      responses:
        201:
          description: 'Created resource.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: roles
                    id: '886'
                    attributes:
                      name: eius
                      permissions: []
                    links:
                      self: /roles/886
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: roles
                      id:
                        type: string
                        example: '886'
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            example: eius
                          permissions:
                            type: array
                            example: []
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: /roles/886
      tags:
        - Roles
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      nullable: false
                      properties:
                        name:
                          type: string
                          description: 'Must not be greater than 255 characters.'
                          example: b
                          nullable: false
                        permissions:
                          type: object
                          description: ''
                          example: null
                          nullable: false
                          properties: {  }
              required:
                - data
      security: []
  '/api/roles/{id}':
    get:
      summary: 'Show Role'
      operationId: showRole
      description: 'Retrieve a specific Role by ID.'
      parameters:
        -
          in: query
          name: 'fields[roles]'
          description: "Sparse fieldsets - specify which fields to include in the response for each resource type. ([Spec](https://jsonapi.org/format/#fetching-sparse-fieldsets))\n\n**Available fields:** `name`, `permissions`"
          example: null
          required: false
          schema:
            type: string
            description: "Sparse fieldsets - specify which fields to include in the response for each resource type. ([Spec](https://jsonapi.org/format/#fetching-sparse-fieldsets))\n\n**Available fields:** `name`, `permissions`"
            example: null
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: roles
                    id: '888'
                    attributes:
                      name: animi
                      permissions: []
                    links:
                      self: /roles/888
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: roles
                      id:
                        type: string
                        example: '888'
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            example: animi
                          permissions:
                            type: array
                            example: []
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: /roles/888
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                    -
                      code: 404
                      source: []
                      detail: 'Resource type "roles" and id "1" is not found.'
                properties:
                  errors:
                    type: array
                    example:
                      -
                        code: 404
                        source: []
                        detail: 'Resource type "roles" and id "1" is not found.'
                    items:
                      type: object
                      properties:
                        code:
                          type: integer
                          example: 404
                        source:
                          type: array
                          example: []
                        detail:
                          type: string
                          example: 'Resource type "roles" and id "1" is not found.'
      tags:
        - Roles
      security: []
    patch:
      summary: 'Update Role'
      operationId: updateRole
      description: 'Update a specific Role by ID.'
      parameters:
        -
          in: query
          name: 'fields[roles]'
          description: "Sparse fieldsets - specify which fields to include in the response for each resource type. ([Spec](https://jsonapi.org/format/#fetching-sparse-fieldsets))\n\n**Available fields:** `name`, `permissions`"
          example: null
          required: false
          schema:
            type: string
            description: "Sparse fieldsets - specify which fields to include in the response for each resource type. ([Spec](https://jsonapi.org/format/#fetching-sparse-fieldsets))\n\n**Available fields:** `name`, `permissions`"
            example: null
            nullable: false
      responses:
        200:
          description: 'The updated resource.'
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: roles
                    id: '890'
                    attributes:
                      name: velit
                      permissions: []
                    links:
                      self: /roles/890
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: roles
                      id:
                        type: string
                        example: '890'
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            example: velit
                          permissions:
                            type: array
                            example: []
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: /roles/890
      tags:
        - Roles
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      nullable: false
                      properties:
                        name:
                          type: string
                          description: 'Must not be greater than 255 characters.'
                          example: b
                          nullable: false
                        permissions:
                          type: object
                          description: ''
                          example: null
                          nullable: false
                          properties: {  }
              required:
                - data
      security: []
    delete:
      summary: 'Delete Role'
      operationId: deleteRole
      description: 'Delete a specific Role by ID.'
      parameters: []
      responses:
        204:
          description: ''
      tags:
        - Roles
      security: []
    parameters:
      -
        in: path
        name: id
        description: "The unique identifier of the 'roles' resource"
        example: 1
        required: true
        schema:
          type: number
  /api/users:
    post:
      summary: 'User registration'
      operationId: userRegistration
      description: '**New user registration**'
      parameters:
        -
          in: query
          name: 'fields[users]'
          description: "Sparse fieldsets - specify which fields to include in the response for each resource type. ([Spec](https://jsonapi.org/format/#fetching-sparse-fieldsets))\n\n**Available fields:** `name`, `email`"
          example: null
          required: false
          schema:
            type: string
            description: "Sparse fieldsets - specify which fields to include in the response for each resource type. ([Spec](https://jsonapi.org/format/#fetching-sparse-fieldsets))\n\n**Available fields:** `name`, `email`"
            example: null
            nullable: false
        -
          in: query
          name: include
          description: "Include related resources. ([Spec](https://jsonapi.org/format/#fetching-includes))\n\n**Available includes:** `roles`"
          example: roles
          required: false
          schema:
            type: string
            description: "Include related resources. ([Spec](https://jsonapi.org/format/#fetching-includes))\n\n**Available includes:** `roles`"
            example: roles
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: users
                    id: '396'
                    attributes:
                      name: 'Clara Cronin V'
                      email: wleuschke@example.net
                    links:
                      self: /users/396
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: users
                      id:
                        type: string
                        example: '396'
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            example: 'Clara Cronin V'
                          email:
                            type: string
                            example: wleuschke@example.net
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: /users/396
      tags:
        - Users
      requestBody:
        required: false
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  nullable: false
                  properties:
                    type:
                      type: string
                      description: ''
                      example: users
                      nullable: false
                      enum:
                        - users
                    attributes:
                      type: object
                      description: ''
                      nullable: false
                      properties:
                        email:
                          type: string
                          description: 'Must be a valid email address.'
                          example: gbailey@example.net
                          nullable: false
                        password:
                          type: string
                          description: 'Must be at least 8 characters.'
                          example: '+-0pBNvYgxwmi/#iw'
                          nullable: false
                        name:
                          type: string
                          description: 'Must not be greater than 255 characters.'
                          example: u
                          nullable: false
                      required:
                        - email
                        - password
                        - name
                  required:
                    - type
      security: []
    get:
      summary: 'List Users'
      operationId: listUsers
      description: 'Retrieve a list of Users.'
      parameters:
        -
          in: query
          name: 'fields[users]'
          description: "Sparse fieldsets - specify which fields to include in the response for each resource type. ([Spec](https://jsonapi.org/format/#fetching-sparse-fieldsets))\n\n**Available fields:** `name`, `email`"
          example: null
          required: false
          schema:
            type: string
            description: "Sparse fieldsets - specify which fields to include in the response for each resource type. ([Spec](https://jsonapi.org/format/#fetching-sparse-fieldsets))\n\n**Available fields:** `name`, `email`"
            example: null
            nullable: false
        -
          in: query
          name: include
          description: "Include related resources. ([Spec](https://jsonapi.org/format/#fetching-includes))\n\n**Available includes:** `roles`"
          example: roles
          required: false
          schema:
            type: string
            description: "Include related resources. ([Spec](https://jsonapi.org/format/#fetching-includes))\n\n**Available includes:** `roles`"
            example: roles
            nullable: false
        -
          in: query
          name: 'page[number]'
          description: 'Page number. ([Spec](https://jsonapi.org/format/#fetching-pagination))'
          example: 1
          required: false
          schema:
            type: number
            description: 'Page number. ([Spec](https://jsonapi.org/format/#fetching-pagination))'
            example: 1
            nullable: false
        -
          in: query
          name: 'page[size]'
          description: 'Number of results per page. ([Spec](https://jsonapi.org/format/#fetching-pagination))'
          example: 10
          required: false
          schema:
            type: number
            description: 'Number of results per page. ([Spec](https://jsonapi.org/format/#fetching-pagination))'
            example: 10
            nullable: false
        -
          in: query
          name: sort
          description: "Sort the results by attributes. Prefix with `-` for descending order. ([Spec](https://jsonapi.org/format/#fetching-sorting))\n\n**Available sort fields:** `name`, `email`"
          example: null
          required: false
          schema:
            type: string
            description: "Sort the results by attributes. Prefix with `-` for descending order. ([Spec](https://jsonapi.org/format/#fetching-sorting))\n\n**Available sort fields:** `name`, `email`"
            example: null
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      type: users
                      id: '405'
                      attributes:
                        name: 'Domingo Leuschke'
                        email: jleffler@example.com
                      links:
                        self: /users/405
                    -
                      type: users
                      id: '406'
                      attributes:
                        name: 'Sebastian Haag I'
                        email: daphne59@example.com
                      links:
                        self: /users/406
                    -
                      type: users
                      id: '407'
                      attributes:
                        name: 'Mathew Klocko'
                        email: madisen51@example.net
                      links:
                        self: /users/407
                  meta:
                    pagination:
                      total: 100
                      count: 20
                      per_page: 3
                      current_page: 1
                      total_pages: 5
                  links:
                    self: 'users?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                    first: 'users?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                    next: 'users?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                    last: 'users?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                properties:
                  data:
                    type: array
                    example:
                      -
                        type: users
                        id: '405'
                        attributes:
                          name: 'Domingo Leuschke'
                          email: jleffler@example.com
                        links:
                          self: /users/405
                      -
                        type: users
                        id: '406'
                        attributes:
                          name: 'Sebastian Haag I'
                          email: daphne59@example.com
                        links:
                          self: /users/406
                      -
                        type: users
                        id: '407'
                        attributes:
                          name: 'Mathew Klocko'
                          email: madisen51@example.net
                        links:
                          self: /users/407
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: users
                        id:
                          type: string
                          example: '405'
                        attributes:
                          type: object
                          properties:
                            name:
                              type: string
                              example: 'Domingo Leuschke'
                            email:
                              type: string
                              example: jleffler@example.com
                        links:
                          type: object
                          properties:
                            self:
                              type: string
                              example: /users/405
                  meta:
                    type: object
                    properties:
                      pagination:
                        type: object
                        properties:
                          total:
                            type: integer
                            example: 100
                          count:
                            type: integer
                            example: 20
                          per_page:
                            type: integer
                            example: 3
                          current_page:
                            type: integer
                            example: 1
                          total_pages:
                            type: integer
                            example: 5
                  links:
                    type: object
                    properties:
                      self:
                        type: string
                        example: 'users?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                      first:
                        type: string
                        example: 'users?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                      next:
                        type: string
                        example: 'users?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                      last:
                        type: string
                        example: 'users?page%5Bnumber%5D=1&page%5Bsize%5D=3'
        403:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors: []
                properties:
                  errors:
                    type: array
                    example: []
      tags:
        - Users
      security: []
  /api/users/me:
    get:
      summary: 'User Me'
      operationId: userMe
      description: "Return currently authenticated user's resource.\nShould be used with authentication logic, first login than use this endpoint."
      parameters:
        -
          in: query
          name: 'fields[users]'
          description: "Sparse fieldsets - specify which fields to include in the response for each resource type. ([Spec](https://jsonapi.org/format/#fetching-sparse-fieldsets))\n\n**Available fields:** `name`, `email`"
          example: null
          required: false
          schema:
            type: string
            description: "Sparse fieldsets - specify which fields to include in the response for each resource type. ([Spec](https://jsonapi.org/format/#fetching-sparse-fieldsets))\n\n**Available fields:** `name`, `email`"
            example: null
            nullable: false
        -
          in: query
          name: include
          description: "Include related resources. ([Spec](https://jsonapi.org/format/#fetching-includes))\n\n**Available includes:** `roles`"
          example: roles
          required: false
          schema:
            type: string
            description: "Include related resources. ([Spec](https://jsonapi.org/format/#fetching-includes))\n\n**Available includes:** `roles`"
            example: roles
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: users
                    id: '398'
                    attributes:
                      name: 'Donny Leffler'
                      email: mitchell.matilda@example.org
                    links:
                      self: /users/398
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: users
                      id:
                        type: string
                        example: '398'
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            example: 'Donny Leffler'
                          email:
                            type: string
                            example: mitchell.matilda@example.org
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: /users/398
      tags:
        - Users
      security: []
  '/api/users/{id}':
    patch:
      summary: 'Update User'
      operationId: updateUser
      description: 'Update a specific User by ID.'
      parameters:
        -
          in: query
          name: 'fields[users]'
          description: "Sparse fieldsets - specify which fields to include in the response for each resource type. ([Spec](https://jsonapi.org/format/#fetching-sparse-fieldsets))\n\n**Available fields:** `name`, `email`"
          example: null
          required: false
          schema:
            type: string
            description: "Sparse fieldsets - specify which fields to include in the response for each resource type. ([Spec](https://jsonapi.org/format/#fetching-sparse-fieldsets))\n\n**Available fields:** `name`, `email`"
            example: null
            nullable: false
        -
          in: query
          name: include
          description: "Include related resources. ([Spec](https://jsonapi.org/format/#fetching-includes))\n\n**Available includes:** `roles`"
          example: roles
          required: false
          schema:
            type: string
            description: "Include related resources. ([Spec](https://jsonapi.org/format/#fetching-includes))\n\n**Available includes:** `roles`"
            example: roles
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: users
                    id: '400'
                    attributes:
                      name: 'Clara Cronin V'
                      email: ferne52@example.com
                    links:
                      self: /users/400
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: users
                      id:
                        type: string
                        example: '400'
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            example: 'Clara Cronin V'
                          email:
                            type: string
                            example: ferne52@example.com
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: /users/400
      tags:
        - Users
      requestBody:
        required: false
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  description: ''
                  nullable: false
                  properties:
                    attributes:
                      type: object
                      description: ''
                      nullable: false
                      properties:
                        email:
                          type: string
                          description: 'Must be a valid email address. Must not be greater than 255 characters.'
                          example: gbailey@example.net
                          nullable: false
                        password:
                          type: string
                          description: 'Must be at least 6 characters.'
                          example: '+-0pBNvYgxwmi/#iw'
                          nullable: false
                        name:
                          type: string
                          description: 'Must not be greater than 255 characters.'
                          example: u
                          nullable: false
      security: []
    get:
      summary: 'Show User'
      operationId: showUser
      description: 'Retrieve a specific User by ID.'
      parameters:
        -
          in: query
          name: 'fields[users]'
          description: "Sparse fieldsets - specify which fields to include in the response for each resource type. ([Spec](https://jsonapi.org/format/#fetching-sparse-fieldsets))\n\n**Available fields:** `name`, `email`"
          example: null
          required: false
          schema:
            type: string
            description: "Sparse fieldsets - specify which fields to include in the response for each resource type. ([Spec](https://jsonapi.org/format/#fetching-sparse-fieldsets))\n\n**Available fields:** `name`, `email`"
            example: null
            nullable: false
        -
          in: query
          name: include
          description: "Include related resources. ([Spec](https://jsonapi.org/format/#fetching-includes))\n\n**Available includes:** `roles`"
          example: roles
          required: false
          schema:
            type: string
            description: "Include related resources. ([Spec](https://jsonapi.org/format/#fetching-includes))\n\n**Available includes:** `roles`"
            example: roles
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    type: users
                    id: '409'
                    attributes:
                      name: 'Mr. Gilbert Swift V'
                      email: hirthe.theo@example.com
                    links:
                      self: /users/409
                properties:
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        example: users
                      id:
                        type: string
                        example: '409'
                      attributes:
                        type: object
                        properties:
                          name:
                            type: string
                            example: 'Mr. Gilbert Swift V'
                          email:
                            type: string
                            example: hirthe.theo@example.com
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: /users/409
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                    -
                      code: 404
                      source: []
                      detail: 'Resource type "users" and id "1" is not found.'
                properties:
                  errors:
                    type: array
                    example:
                      -
                        code: 404
                        source: []
                        detail: 'Resource type "users" and id "1" is not found.'
                    items:
                      type: object
                      properties:
                        code:
                          type: integer
                          example: 404
                        source:
                          type: array
                          example: []
                        detail:
                          type: string
                          example: 'Resource type "users" and id "1" is not found.'
      tags:
        - Users
      security: []
    delete:
      summary: 'Delete User'
      operationId: deleteUser
      description: 'Delete a specific User by ID.'
      parameters: []
      responses:
        204:
          description: ''
      tags:
        - Users
      security: []
    parameters:
      -
        in: path
        name: id
        description: "The unique identifier of the 'users' resource"
        example: 1
        required: true
        schema:
          type: number
  '/api/users/{id}/roles':
    get:
      summary: 'List related Roles'
      operationId: listRelatedRoles
      description: 'Retrieve the list of related Roles for a specific User.'
      parameters:
        -
          in: query
          name: 'fields[users]'
          description: "Sparse fieldsets - specify which fields to include in the response for each resource type. ([Spec](https://jsonapi.org/format/#fetching-sparse-fieldsets))\n\n**Available fields:** `name`, `email`"
          example: null
          required: false
          schema:
            type: string
            description: "Sparse fieldsets - specify which fields to include in the response for each resource type. ([Spec](https://jsonapi.org/format/#fetching-sparse-fieldsets))\n\n**Available fields:** `name`, `email`"
            example: null
            nullable: false
        -
          in: query
          name: include
          description: "Include related resources. ([Spec](https://jsonapi.org/format/#fetching-includes))\n\n**Available includes:** `roles`"
          example: roles
          required: false
          schema:
            type: string
            description: "Include related resources. ([Spec](https://jsonapi.org/format/#fetching-includes))\n\n**Available includes:** `roles`"
            example: roles
            nullable: false
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      data:
                        -
                          type: roles
                          id: '892'
                          attributes:
                            name: modi
                            permissions: []
                          links:
                            self: /roles/892
                        -
                          type: roles
                          id: '893'
                          attributes:
                            name: ipsum
                            permissions: []
                          links:
                            self: /roles/893
                        -
                          type: roles
                          id: '894'
                          attributes:
                            name: nostrum
                            permissions: []
                          links:
                            self: /roles/894
                      meta:
                        pagination:
                          total: 100
                          count: 20
                          per_page: 3
                          current_page: 1
                          total_pages: 5
                      links:
                        self: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                        first: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                        next: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                        last: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                    properties:
                      data:
                        type: array
                        example:
                          -
                            type: roles
                            id: '892'
                            attributes:
                              name: modi
                              permissions: []
                            links:
                              self: /roles/892
                          -
                            type: roles
                            id: '893'
                            attributes:
                              name: ipsum
                              permissions: []
                            links:
                              self: /roles/893
                          -
                            type: roles
                            id: '894'
                            attributes:
                              name: nostrum
                              permissions: []
                            links:
                              self: /roles/894
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              example: roles
                            id:
                              type: string
                              example: '892'
                            attributes:
                              type: object
                              properties:
                                name:
                                  type: string
                                  example: modi
                                permissions:
                                  type: array
                                  example: []
                            links:
                              type: object
                              properties:
                                self:
                                  type: string
                                  example: /roles/892
                      meta:
                        type: object
                        properties:
                          pagination:
                            type: object
                            properties:
                              total:
                                type: integer
                                example: 100
                              count:
                                type: integer
                                example: 20
                              per_page:
                                type: integer
                                example: 3
                              current_page:
                                type: integer
                                example: 1
                              total_pages:
                                type: integer
                                example: 5
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                          first:
                            type: string
                            example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                          next:
                            type: string
                            example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                          last:
                            type: string
                            example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                  -
                    description: ''
                    type: object
                    example:
                      data:
                        -
                          type: roles
                          id: '895'
                          attributes:
                            name: omnis
                            permissions: []
                          links:
                            self: /roles/895
                        -
                          type: roles
                          id: '896'
                          attributes:
                            name: autem
                            permissions: []
                          links:
                            self: /roles/896
                        -
                          type: roles
                          id: '897'
                          attributes:
                            name: consequatur
                            permissions: []
                          links:
                            self: /roles/897
                      meta:
                        pagination:
                          total: 100
                          count: 20
                          per_page: 3
                          current_page: 1
                          total_pages: 5
                      links:
                        self: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                        first: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                        next: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                        last: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                    properties:
                      data:
                        type: array
                        example:
                          -
                            type: roles
                            id: '895'
                            attributes:
                              name: omnis
                              permissions: []
                            links:
                              self: /roles/895
                          -
                            type: roles
                            id: '896'
                            attributes:
                              name: autem
                              permissions: []
                            links:
                              self: /roles/896
                          -
                            type: roles
                            id: '897'
                            attributes:
                              name: consequatur
                              permissions: []
                            links:
                              self: /roles/897
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              example: roles
                            id:
                              type: string
                              example: '895'
                            attributes:
                              type: object
                              properties:
                                name:
                                  type: string
                                  example: omnis
                                permissions:
                                  type: array
                                  example: []
                            links:
                              type: object
                              properties:
                                self:
                                  type: string
                                  example: /roles/895
                      meta:
                        type: object
                        properties:
                          pagination:
                            type: object
                            properties:
                              total:
                                type: integer
                                example: 100
                              count:
                                type: integer
                                example: 20
                              per_page:
                                type: integer
                                example: 3
                              current_page:
                                type: integer
                                example: 1
                              total_pages:
                                type: integer
                                example: 5
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                          first:
                            type: string
                            example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                          next:
                            type: string
                            example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                          last:
                            type: string
                            example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                    -
                      code: 404
                      source: []
                      detail: 'Resource type "users" and id "1" is not found.'
                properties:
                  errors:
                    type: array
                    example:
                      -
                        code: 404
                        source: []
                        detail: 'Resource type "users" and id "1" is not found.'
                    items:
                      type: object
                      properties:
                        code:
                          type: integer
                          example: 404
                        source:
                          type: array
                          example: []
                        detail:
                          type: string
                          example: 'Resource type "users" and id "1" is not found.'
      tags:
        - Users
      security: []
    parameters:
      -
        in: path
        name: id
        description: "The unique identifier of the 'users' resource"
        example: 1
        required: true
        schema:
          type: number
  '/api/users/{id}/relationships/roles':
    get:
      summary: 'Show Roles relationships'
      operationId: showRolesRelationships
      description: 'Retrieve the identifiers of the related Roles for a specific User.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      data:
                        -
                          type: roles
                          id: '898'
                          links:
                            self: /roles/898
                        -
                          type: roles
                          id: '899'
                          links:
                            self: /roles/899
                        -
                          type: roles
                          id: '900'
                          links:
                            self: /roles/900
                      meta:
                        pagination:
                          total: 100
                          count: 20
                          per_page: 3
                          current_page: 1
                          total_pages: 5
                      links:
                        self: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                        first: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                        next: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                        last: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                    properties:
                      data:
                        type: array
                        example:
                          -
                            type: roles
                            id: '898'
                            links:
                              self: /roles/898
                          -
                            type: roles
                            id: '899'
                            links:
                              self: /roles/899
                          -
                            type: roles
                            id: '900'
                            links:
                              self: /roles/900
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              example: roles
                            id:
                              type: string
                              example: '898'
                            links:
                              type: object
                              properties:
                                self:
                                  type: string
                                  example: /roles/898
                      meta:
                        type: object
                        properties:
                          pagination:
                            type: object
                            properties:
                              total:
                                type: integer
                                example: 100
                              count:
                                type: integer
                                example: 20
                              per_page:
                                type: integer
                                example: 3
                              current_page:
                                type: integer
                                example: 1
                              total_pages:
                                type: integer
                                example: 5
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                          first:
                            type: string
                            example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                          next:
                            type: string
                            example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                          last:
                            type: string
                            example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                  -
                    description: ''
                    type: object
                    example:
                      data:
                        -
                          type: roles
                          id: '901'
                          links:
                            self: /roles/901
                        -
                          type: roles
                          id: '902'
                          links:
                            self: /roles/902
                        -
                          type: roles
                          id: '903'
                          links:
                            self: /roles/903
                      meta:
                        pagination:
                          total: 100
                          count: 20
                          per_page: 3
                          current_page: 1
                          total_pages: 5
                      links:
                        self: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                        first: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                        next: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                        last: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                    properties:
                      data:
                        type: array
                        example:
                          -
                            type: roles
                            id: '901'
                            links:
                              self: /roles/901
                          -
                            type: roles
                            id: '902'
                            links:
                              self: /roles/902
                          -
                            type: roles
                            id: '903'
                            links:
                              self: /roles/903
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              example: roles
                            id:
                              type: string
                              example: '901'
                            links:
                              type: object
                              properties:
                                self:
                                  type: string
                                  example: /roles/901
                      meta:
                        type: object
                        properties:
                          pagination:
                            type: object
                            properties:
                              total:
                                type: integer
                                example: 100
                              count:
                                type: integer
                                example: 20
                              per_page:
                                type: integer
                                example: 3
                              current_page:
                                type: integer
                                example: 1
                              total_pages:
                                type: integer
                                example: 5
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                          first:
                            type: string
                            example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                          next:
                            type: string
                            example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                          last:
                            type: string
                            example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  errors:
                    -
                      code: 404
                      source: []
                      detail: 'Resource type "users" and id "1" is not found.'
                properties:
                  errors:
                    type: array
                    example:
                      -
                        code: 404
                        source: []
                        detail: 'Resource type "users" and id "1" is not found.'
                    items:
                      type: object
                      properties:
                        code:
                          type: integer
                          example: 404
                        source:
                          type: array
                          example: []
                        detail:
                          type: string
                          example: 'Resource type "users" and id "1" is not found.'
      tags:
        - Users
      security: []
    post:
      summary: 'Add to Roles relationships'
      operationId: addToRolesRelationships
      description: 'Add identifiers to the Roles relationship of a specific User.'
      parameters: []
      responses:
        201:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      data:
                        -
                          type: roles
                          id: '904'
                          links:
                            self: /roles/904
                        -
                          type: roles
                          id: '905'
                          links:
                            self: /roles/905
                        -
                          type: roles
                          id: '906'
                          links:
                            self: /roles/906
                      meta:
                        pagination:
                          total: 100
                          count: 20
                          per_page: 3
                          current_page: 1
                          total_pages: 5
                      links:
                        self: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                        first: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                        next: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                        last: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                    properties:
                      data:
                        type: array
                        example:
                          -
                            type: roles
                            id: '904'
                            links:
                              self: /roles/904
                          -
                            type: roles
                            id: '905'
                            links:
                              self: /roles/905
                          -
                            type: roles
                            id: '906'
                            links:
                              self: /roles/906
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              example: roles
                            id:
                              type: string
                              example: '904'
                            links:
                              type: object
                              properties:
                                self:
                                  type: string
                                  example: /roles/904
                      meta:
                        type: object
                        properties:
                          pagination:
                            type: object
                            properties:
                              total:
                                type: integer
                                example: 100
                              count:
                                type: integer
                                example: 20
                              per_page:
                                type: integer
                                example: 3
                              current_page:
                                type: integer
                                example: 1
                              total_pages:
                                type: integer
                                example: 5
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                          first:
                            type: string
                            example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                          next:
                            type: string
                            example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                          last:
                            type: string
                            example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                  -
                    description: ''
                    type: object
                    example:
                      data:
                        -
                          type: roles
                          id: '907'
                          links:
                            self: /roles/907
                        -
                          type: roles
                          id: '908'
                          links:
                            self: /roles/908
                        -
                          type: roles
                          id: '909'
                          links:
                            self: /roles/909
                      meta:
                        pagination:
                          total: 100
                          count: 20
                          per_page: 3
                          current_page: 1
                          total_pages: 5
                      links:
                        self: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                        first: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                        next: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                        last: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                    properties:
                      data:
                        type: array
                        example:
                          -
                            type: roles
                            id: '907'
                            links:
                              self: /roles/907
                          -
                            type: roles
                            id: '908'
                            links:
                              self: /roles/908
                          -
                            type: roles
                            id: '909'
                            links:
                              self: /roles/909
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              example: roles
                            id:
                              type: string
                              example: '907'
                            links:
                              type: object
                              properties:
                                self:
                                  type: string
                                  example: /roles/907
                      meta:
                        type: object
                        properties:
                          pagination:
                            type: object
                            properties:
                              total:
                                type: integer
                                example: 100
                              count:
                                type: integer
                                example: 20
                              per_page:
                                type: integer
                                example: 3
                              current_page:
                                type: integer
                                example: 1
                              total_pages:
                                type: integer
                                example: 5
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                          first:
                            type: string
                            example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                          next:
                            type: string
                            example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                          last:
                            type: string
                            example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  description: 'The resource identifier for a Roles.'
                  example:
                    -
                      id: '1'
                      type: roles
                  items:
                    type: object
              required:
                - data
      security: []
    patch:
      summary: 'Update Roles relationships'
      operationId: updateRolesRelationships
      description: 'Replace all identifiers in the Roles relationship of a specific User.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      data:
                        -
                          type: roles
                          id: '910'
                          links:
                            self: /roles/910
                        -
                          type: roles
                          id: '911'
                          links:
                            self: /roles/911
                        -
                          type: roles
                          id: '912'
                          links:
                            self: /roles/912
                      meta:
                        pagination:
                          total: 100
                          count: 20
                          per_page: 3
                          current_page: 1
                          total_pages: 5
                      links:
                        self: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                        first: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                        next: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                        last: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                    properties:
                      data:
                        type: array
                        example:
                          -
                            type: roles
                            id: '910'
                            links:
                              self: /roles/910
                          -
                            type: roles
                            id: '911'
                            links:
                              self: /roles/911
                          -
                            type: roles
                            id: '912'
                            links:
                              self: /roles/912
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              example: roles
                            id:
                              type: string
                              example: '910'
                            links:
                              type: object
                              properties:
                                self:
                                  type: string
                                  example: /roles/910
                      meta:
                        type: object
                        properties:
                          pagination:
                            type: object
                            properties:
                              total:
                                type: integer
                                example: 100
                              count:
                                type: integer
                                example: 20
                              per_page:
                                type: integer
                                example: 3
                              current_page:
                                type: integer
                                example: 1
                              total_pages:
                                type: integer
                                example: 5
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                          first:
                            type: string
                            example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                          next:
                            type: string
                            example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                          last:
                            type: string
                            example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                  -
                    description: ''
                    type: object
                    example:
                      data:
                        -
                          type: roles
                          id: '913'
                          links:
                            self: /roles/913
                        -
                          type: roles
                          id: '914'
                          links:
                            self: /roles/914
                        -
                          type: roles
                          id: '915'
                          links:
                            self: /roles/915
                      meta:
                        pagination:
                          total: 100
                          count: 20
                          per_page: 3
                          current_page: 1
                          total_pages: 5
                      links:
                        self: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                        first: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                        next: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                        last: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                    properties:
                      data:
                        type: array
                        example:
                          -
                            type: roles
                            id: '913'
                            links:
                              self: /roles/913
                          -
                            type: roles
                            id: '914'
                            links:
                              self: /roles/914
                          -
                            type: roles
                            id: '915'
                            links:
                              self: /roles/915
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              example: roles
                            id:
                              type: string
                              example: '913'
                            links:
                              type: object
                              properties:
                                self:
                                  type: string
                                  example: /roles/913
                      meta:
                        type: object
                        properties:
                          pagination:
                            type: object
                            properties:
                              total:
                                type: integer
                                example: 100
                              count:
                                type: integer
                                example: 20
                              per_page:
                                type: integer
                                example: 3
                              current_page:
                                type: integer
                                example: 1
                              total_pages:
                                type: integer
                                example: 5
                      links:
                        type: object
                        properties:
                          self:
                            type: string
                            example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                          first:
                            type: string
                            example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                          next:
                            type: string
                            example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
                          last:
                            type: string
                            example: 'roles?page%5Bnumber%5D=1&page%5Bsize%5D=3'
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  description: 'The resource identifier for a Roles.'
                  example:
                    -
                      id: '1'
                      type: roles
                  items:
                    type: object
              required:
                - data
      security: []
    delete:
      summary: 'Remove from Roles relationships'
      operationId: removeFromRolesRelationships
      description: 'Remove identifiers from the Roles relationship of a specific User.'
      parameters: []
      responses:
        204:
          description: ''
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  description: 'The resource identifier for a Roles.'
                  example:
                    -
                      id: '1'
                      type: roles
                  items:
                    type: object
              required:
                - data
      security: []
    parameters:
      -
        in: path
        name: id
        description: "The unique identifier of the 'users' resource"
        example: 1
        required: true
        schema:
          type: number
