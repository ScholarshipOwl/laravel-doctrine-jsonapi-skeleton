# .windsurfrules
# Example Windsurf rules for working with and building the Laravel Doctrine JSON:API Skeleton

[core]
# Use conventional commits for all commit messages
commit_message_format = "conventional"

# Enforce PSR-12 coding standard for PHP
php_cs_standard = "psr12"

# Use Composer for PHP dependency management
php_dependency_manager = "composer"

# Always run tests before pushing
require_tests_pass = true

default_branch = "main"

# Ignore .env and other sensitive files
ignore_files = [".env", ".env.*", "node_modules/", "vendor/"]

[workflow]
# Pull requests must be reviewed before merging
require_pr_review = true

# Require up-to-date with main before merge
require_up_to_date_with_main = true

# Documentation must be updated for any API change
require_docs_update_on_api_change = true

[api]
# Only expose API routes (no web or Blade routes)
expose_only_api_routes = true

# Use OpenAPI/Scribe for API documentation
api_docs_tool = "scribe"

[migrations]
# Use Doctrine migrations for all DB schema changes
migration_tool = "doctrine-migrations"

[entities]
# Use Doctrine entities, not Eloquent models
entity_type = "doctrine"
entity_setters_return_self = true

[extensions]
# Enable Doctrine extensions for features like sluggable, timestamps, etc.
enable_extensions = true

[jsonapi]
# All API endpoints must be JSON:API compliant
require_jsonapi_compliance = true

[git]
# Use conventional commits for all commit messages
commit_message_format = "conventional"

# Read diff of staged files before commit
commit_read_diff_staged = true

# Only do commit and generate message from diff
commit_only = true

# Do not add files to index before commit
commit_add_staged = false
[documentation]
# Require logging of all major setup and architectural changes in Setup.md
require_setup_log = true
setup_log_file = "docs/Setup.md"
setup_log_format = "tutorial"

# Description:
# All significant changes to the project setup, especially those that differ from standard Laravel/Eloquent usage (such as Doctrine configuration, entity setup, migration approach, and API-only design), must be documented in docs/Setup.md in a step-by-step, tutorial-like format.

# Enforcement:
# - During code review, verify that any new architectural or setup change is reflected in docs/Setup.md.
# - Pull requests that introduce such changes should be blocked if the setup log is not updated.